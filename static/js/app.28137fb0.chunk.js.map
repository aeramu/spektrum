{"version":3,"sources":["assets/logo.png","src/context.js","src/screen/login/components/form.js","src/screen/login/index.js","src/screen/home/components/transfer.js","src/screen/home/components/accountList.js","src/screen/home/components/scoreboard.js","src/screen/home/components/wallet.js","src/screen/home/components/transactionList.js","src/screen/home/components/transactionHistory.js","src/screen/home/components/itemList.js","src/screen/home/components/itemMenu.js","src/screen/home/index.js","src/navigator.js","src/graphql.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","AuthContext","React","createContext","useState","nim","setNIM","code","setCode","setToken","useContext","useMutation","SIGN_IN","signIn","View","style","styles","container","TextInput","input","placeholder","textContentType","onChangeText","text","autoCapitalize","button","Button","title","onPress","variables","then","data","gql","StyleSheet","create","width","backgroundColor","borderWidth","borderColor","marginBottom","padding","overflow","borderRadius","marginTop","Image","resizeMode","logo","source","height","alignItems","props","money","setMoney","TRANSFER","transfer","Text","value","parseInt","fontSize","fontWeight","alignSelf","FlatList","ListHeaderComponent","number","name","venture","renderItem","item","index","RenderItem","itemContainer","marginRight","flexDirection","useQuery","SCOREBOARD","loading","refetch","ActivityIndicator","progress","scoreboard","sum","target","divider","edges","ProgressBar","progressBar","flex","position","justifyContent","WALLET","removeToken","handleSignOut","myAccount","type","destination","amount","TRANSACTION","transactionList","BUY","buy","description","price","paddingVertical","paddingHorizontal","itemList","wallet","paddingTop","paddingBottom","MainStack","createStackNavigator","MainStackNavigator","Navigator","screenOptions","headerShown","Screen","component","HomeScreen","isSignedIn","NavigationContainer","client","ApolloClient","uri","request","operation","a","async","AsyncStorage","getItem","token","setContext","headers","App","authMemo","useMemo","setItem","removeItem","clearStore","useEffect","Provider","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"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","file":"static/js/app.28137fb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4b578565.png\";","import React from 'react'\n\nexport const AuthContext = React.createContext()","import React from 'react'\nimport {\n    StyleSheet,\n    View,\n    TextInput,\n    Button, \n} from 'react-native'\nimport {AuthContext} from '../../../context'\nimport {useMutation} from '@apollo/react-hooks'\nimport {gql} from 'apollo-boost'\n\nexport default () => {\n    const [nim, setNIM] = React.useState()\n    const [code, setCode] = React.useState()\n    const {setToken} = React.useContext(AuthContext)\n    const [signIn] = useMutation(SIGN_IN)\n\n    const handleSignIn = () => {\n        signIn({\n            variables:{\n                nim,\n                code,\n            }\n        })\n        .then(({data}) => {\n            setToken(data.signIn)\n        })\n    }\n\n    return (\n        <View style={styles.container}>\n            <TextInput \n                style={styles.input}\n                placeholder='NIM' \n                textContentType='telephoneNumber'\n                onChangeText={(text) => setNIM(text)}\n            />\n            <TextInput \n                style={styles.input}\n                placeholder='Code' \n                autoCapitalize='none'\n                onChangeText={(text) => setCode(text)}\n            />\n            <View style={styles.button}>\n                <Button\n                    title='       Login       ' \n                    onPress={() => handleSignIn()}\n                />\n            </View>\n        </View>\n    )\n}\n\nconst SIGN_IN = gql`\n    mutation($nim: String!, $code: String!){\n        signIn(nim: $nim, code: $code)\n    }\n`\n\nconst styles = StyleSheet.create({\n    container: {\n        width:300,\n        backgroundColor: '#fff',\n    },\n    input: {\n        borderWidth:0.1,\n        borderColor:'grey',\n        marginBottom:10,\n        padding:10,\n        overflow:'hidden',\n        borderRadius:10,\n    },\n    button:{\n        marginTop:10,\n        borderRadius:10,\n        overflow:'hidden'\n    }\n})","import React from 'react'\nimport {\n    Image,\n    View,\n    StyleSheet,\n} from 'react-native'\nimport {Form} from './components'\nimport logo from '../../../assets/logo.png'\n\nexport default () => {\n    return (\n        <View style={styles.container}>\n            <Image\n                resizeMode='contain'\n                style={styles.logo} \n                source={logo}\n            />\n            <Form/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    logo: {\n      width:500,\n      height:200,\n    },\n    container:{\n        alignItems:'center',\n        padding:20,\n    }\n})","import React from 'react'\nimport {\n    View, \n    TextInput, \n    Button, \n    Text,\n    StyleSheet\n} from 'react-native'\nimport {gql} from 'apollo-boost'\nimport {useMutation} from '@apollo/react-hooks'\n\nexport default (props) => {\n    const [nim, setNIM] = React.useState()\n    const [money, setMoney] = React.useState()\n    const [transfer] = useMutation(TRANSFER)\n\n    const handleTransfer = () => {\n        transfer({\n            variables:{\n                nim,\n                money: parseInt(money)\n            }\n        })\n        setNIM('')\n        setMoney('')\n    }\n\n    return(\n        <View {...props}>\n            <Text style={styles.title}>Transfer</Text>\n            <TextInput \n                style={styles.input}\n                placeholder='NIM' \n                value={nim}\n                onChangeText={(text) => setNIM(text)}\n            />\n            <TextInput\n                style={styles.input}\n                placeholder='Amount'\n                value={money} \n                onChangeText={(text) => setMoney(text)}\n            />\n            <View style={styles.button}>\n                <Button title='transfer' onPress={() => handleTransfer()}/>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    button:{\n        marginTop:10,\n        borderRadius:10,\n        overflow:'hidden'\n    },\n    input: {\n        borderWidth:0.1,\n        borderColor:'grey',\n        marginBottom:10,\n        padding:10,\n        overflow:'hidden',\n        borderRadius:10,\n    },\n    title:{\n        fontSize:20,\n        fontWeight:'bold',\n        alignSelf:'center',\n        marginBottom:10,\n    }\n})\n\nconst TRANSFER = gql`\n    mutation($nim: String!, $money: Int!){\n        transfer(receiverNIM: $nim, money: $money){\n            id\n            money\n            venture\n        }\n    }\n`","import React from 'react'\nimport {\n    FlatList,\n    View,\n    Text,\n    StyleSheet,\n} from 'react-native'\n\nexport default ({data}) => {\n    return(\n        <FlatList\n            data={data}\n            ListHeaderComponent={() => (\n                <RenderItem number='No' nim='NIM' name='Name' venture='Venture' money='Money'/>\n            )}\n            renderItem={({item, index}) => (\n                <RenderItem number={index+1} nim={item.nim} name={item.name} venture={item.venture} money={item.money}/>\n            )}\n        />\n    )\n}\n\nconst RenderItem = ({number, nim, name, money, venture}) => {\n    return(\n        <View style={styles.itemContainer}>\n            <Text style={styles.number}>{number + '.'}</Text>\n            <Text style={styles.nim}>{nim}</Text>\n            <Text style={styles.name}>{name}</Text>\n            <Text style={styles.money}>{money}</Text>\n            <Text style={styles.venture}>{venture}</Text>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    number:{\n        width:25,\n        marginRight:4\n    },\n    nim:{\n        width:65,\n        marginRight:7\n    },\n    name:{\n        width:100,\n        marginRight:7,\n    },\n    money:{\n        width:50,\n        marginRight:7\n    },\n    venture:{\n        fontWeight:'bold',\n        width:60,\n    },\n    itemContainer:{\n        flexDirection:'row',\n        marginBottom:10,\n    },\n})","import React from 'react'\nimport {\n    View,\n    FlatList,\n    ActivityIndicator,\n    Text,\n    StyleSheet,\n} from 'react-native'\nimport AccountList from './accountList'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks'\n\nexport default (props) => {\n    const {data, loading, refetch} = useQuery(SCOREBOARD)\n\n    if (loading) return (\n        <View>\n            <ActivityIndicator/>\n        </View>\n    )\n\n    return(\n        <View {...props}>\n            <Text style={styles.title}>Scoreboard</Text>\n            <Text>Unlock Next Day!</Text>\n            <ProgressBar progress={data.scoreboard.sum} target={data.scoreboard.target}/>\n            <View style={styles.divider}/>\n            <AccountList data={data.scoreboard.edges}/>\n        </View>\n    )\n}\n\nconst ProgressBar = ({progress, target}) => (\n    <View style={styles.progressBar}>\n        <View style={{\n            flex: progress, \n            height:20,\n            backgroundColor:'#bbbbbb'\n        }}\n        />\n        <View style={{\n            flex: target - progress, \n            height:20\n        }}\n        />\n        <Text style={{position:'absolute'}}>{progress}/{target}</Text>\n    </View>\n)\n\nconst styles = StyleSheet.create({\n    title:{\n        fontSize:20,\n        fontWeight:'bold',\n        marginBottom:10,\n    },\n    divider:{\n        height:1,\n        alignSelf:'stretch',\n        backgroundColor:'grey',\n        marginBottom:20,\n    },\n    progressBar:{\n        alignSelf:'center',\n        justifyContent:'center',\n        flexDirection:'row',\n        width:250,\n        borderWidth:0.5,\n        borderRadius:10,\n        marginBottom:10,\n        overflow:'hidden',\n        borderColor:'grey',\n        marginTop:3,\n    }\n})\n\nconst SCOREBOARD = gql`\n    {\n        scoreboard{\n            edges{\n                id\n                nim\n                name\n                money\n                venture\n            }\n            sum\n            target\n        }\n    }\n`","import React from 'react'\nimport {\n    View, \n    ActivityIndicator,\n    Text,\n    Button,\n    StyleSheet,\n} from 'react-native'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks'\nimport {AuthContext} from '../../../context'\n\nexport default (props) => {\n    const {data, loading} = useQuery(WALLET)\n    const {removeToken} = React.useContext(AuthContext)\n\n    const handleSignOut = () => {\n        removeToken()\n    }\n\n    if (loading) return (\n        <View>\n            <ActivityIndicator/>\n        </View>\n    )\n    \n    if (!data.myAccount) {\n        handleSignOut()\n    }\n\n    return(\n        <View {...props}>\n            <Text style={styles.money}>Rp. {data.myAccount.money}</Text>\n            <Text style={styles.text}>{data.myAccount.nim}</Text>\n            <Text style={styles.text}>{data.myAccount.name}</Text>\n            <View style={styles.button}>\n                <Button title='logout' onPress={() => handleSignOut()}/>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    money:{\n        fontWeight:'bold',\n        fontSize:30,\n        marginBottom:10,\n    },\n    button:{\n        marginTop:10,\n        borderRadius:10,\n        overflow:'hidden'\n    },\n    text:{\n        fontSize:16,\n    }\n})\n\nconst WALLET = gql`\n    {\n        myAccount{\n            id\n            nim\n            name\n            money\n        }\n    }\n`","import React from 'react'\nimport {\n    FlatList,\n    View,\n    Text,\n    StyleSheet,\n} from 'react-native'\n\nexport default ({data}) => {\n    return(\n        <FlatList\n            data={data}\n            renderItem={({item}) => {\n                const type = item.item? \"Buy\" : \"Transfer to\"\n                const target = item.item? item.item : item.destination\n                return(\n                    <RenderItem source={item.source} type={type} target={target} amount={item.amount}/> \n                )\n            }}\n        />\n    )\n}\n\nconst RenderItem = ({source, type, target, amount}) => {\n    return(\n        <View style={styles.itemContainer}>\n            <Text>{source + ' ' + type + ' ' + target + ' Rp.' + amount}</Text>\n            {/* <Text style={styles.number}>{source}</Text>\n            <Text style={styles.nim}>{type}</Text>\n            <Text style={styles.name}>{target}</Text>\n            <Text style={styles.money}>{amount}</Text> */}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    itemContainer:{\n        flexDirection:'row',\n        marginBottom:10,\n    },\n})","import React from 'react'\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    StyleSheet,\n} from 'react-native'\nimport TransactionList from './transactionList'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks'\n\nexport default (props) => {\n    const {data, loading, refetch} = useQuery(TRANSACTION)\n\n    if (loading) return (\n        <View>\n            <ActivityIndicator/>\n        </View>\n    )\n\n    return(\n        <View {...props}>\n            <Text style={styles.title}>Transaction History</Text>\n            <View style={styles.divider}/>\n            <TransactionList data={data.transactionList.edges}/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    title:{\n        fontSize:20,\n        fontWeight:'bold',\n        marginBottom:10,\n    },\n    divider:{\n        height:1,\n        alignSelf:'stretch',\n        backgroundColor:'grey',\n        marginBottom:20,\n    },\n})\n\nconst TRANSACTION = gql`\n    {\n        transactionList{\n            edges{\n                id\n                source\n                destination\n                item\n                amount\n            }\n        }\n    }\n`","import React from 'react'\nimport {\n    FlatList,\n    View,\n    Text,\n    Button,\n    StyleSheet,\n} from 'react-native'\nimport {gql} from 'apollo-boost'\nimport {useMutation} from '@apollo/react-hooks'\n\nexport default ({data}) => {\n    const [buy] = useMutation(BUY)\n\n    const handleBuyClick = (name, price) => {\n        buy({\n            variables:{\n                name,\n                price,\n            }\n        }).then()\n    }\n\n    return(\n        <FlatList\n            data={data}\n            renderItem={({item}) => {\n                return(\n                    <RenderItem \n                        name={item.name} \n                        description={item.description} \n                        price={item.price}\n                        onPress={() => handleBuyClick(item.name, item.price)}\n                    /> \n                )\n            }}\n        />\n    )\n}\n\nconst RenderItem = ({name, description, price, onPress}) => {\n    return(\n        <View style={styles.itemContainer}>\n            <Text style={styles.name}>{name}</Text> \n            <Text style={styles.description}>{description}</Text>\n            <View style={styles.buy}>\n                <Text>{'Rp. ' + price}</Text>\n                <View style={styles.button}>\n                    <Button title='  Buy  ' onPress={() => onPress()}/>\n                </View>\n            </View>\n        </View>\n    )\n}\n\nconst BUY = gql`\n    mutation($name: String!, $price: Int!){\n        buyItem(item: $name, amount: $price){\n            id\n            money\n        }\n    }\n`\n\nconst styles = StyleSheet.create({\n    itemContainer:{\n        marginBottom:10,\n        alignItems:'flex-start',\n        borderWidth:0.5,\n        borderRadius:20,\n        borderColor:'grey',\n        paddingVertical:10,\n        paddingHorizontal:10,\n    },\n    name:{\n        fontWeight:'bold',\n        fontSize:16\n    },\n    description:{\n        fontSize:13,\n    },\n    buy:{\n        width:270,\n        flexDirection:'row',\n        alignItems:'center',\n        justifyContent:'space-between',\n        //backgroundColor:'red'\n    },\n    button:{\n        marginTop:10,\n        borderRadius:10,\n        overflow:'hidden',\n    }\n})","import React from 'react'\nimport {\n    View,\n    ActivityIndicator,\n    Text,\n    StyleSheet,\n} from 'react-native'\nimport ItemList from './itemList'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from '@apollo/react-hooks'\n\nexport default (props) => {\n    const {data, loading, refetch} = useQuery(TRANSACTION)\n\n    if (loading) return (\n        <View>\n            <ActivityIndicator/>\n        </View>\n    )\n\n    return(\n        <View {...props}>\n            <Text style={styles.title}>Menu</Text>\n            <View style={styles.divider}/>\n            <ItemList data={data.itemList.edges}/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    title:{\n        fontSize:20,\n        fontWeight:'bold',\n        marginBottom:10,\n    },\n    divider:{\n        height:1,\n        alignSelf:'stretch',\n        backgroundColor:'grey',\n        marginBottom:20,\n    },\n})\n\nconst TRANSACTION = gql`\n    {\n        itemList{\n            edges{\n                id\n                name\n                description\n                price\n            }\n        }\n    }\n`","import React from 'react'\nimport {\n    StyleSheet,\n    View,\n    Image,\n} from 'react-native'\nimport {Transfer, Scoreboard, Wallet, TransactionHistory, ItemMenu} from './components'\nimport logo from '../../../assets/logo.png'\n\nexport default () => {\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={{height:200, width: 500}} resizeMode='contain'/>\n      <Wallet style={styles.wallet}/>\n      <Transfer style={styles.transfer}/>\n      <Scoreboard style={styles.scoreboard}/>\n      <ItemMenu style={styles.scoreboard}/>\n      <TransactionHistory style={styles.scoreboard}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingVertical:20,\n    paddingHorizontal:20,\n    alignItems:'center',\n    justifyContent: 'flex-start',\n  },\n  wallet:{\n    width:350,\n    borderWidth:0.5,\n    borderRadius:20,\n    borderColor:'grey',\n    paddingTop:30,\n    paddingBottom:30,\n    paddingHorizontal:50,\n  },\n  scoreboard:{\n    width:350,\n    height:500,\n    alignItems:'center',\n    borderWidth:0.5,\n    borderRadius:20,\n    borderColor:'grey',\n    paddingVertical:20,\n    paddingHorizontal:20,\n    marginTop:20,\n  },\n  transfer:{\n    width:350,\n    alignItems:'stretch',\n    borderWidth:0.5,\n    borderRadius:20,\n    borderColor:'grey',\n    paddingVertical:20,\n    paddingHorizontal:30,\n    marginTop:20,\n    marginBottom:20,\n  },\n})","import React from 'react'\nimport {NavigationContainer} from '@react-navigation/native'\nimport {createStackNavigator} from '@react-navigation/stack'\nimport {\n    LoginScreen,\n    HomeScreen\n} from './screen'\n\nconst MainStack = createStackNavigator()\nconst MainStackNavigator = () => {\n    return(\n        <MainStack.Navigator screenOptions={{\n            headerShown:false,\n        }}>\n            <MainStack.Screen name='home' component={HomeScreen}/>\n        </MainStack.Navigator>\n    )\n}\n\nexport default ({isSignedIn}) => {\n    return(\n        <NavigationContainer>\n            {isSignedIn\n                ? <MainStackNavigator/>\n                : <LoginScreen/>\n            }\n        </NavigationContainer>\n    )\n}","import ApolloClient from 'apollo-boost'\nimport {AsyncStorage} from 'react-native'\n\nexport const client = new ApolloClient({\n  uri: 'https://l2l9mu6qjj.execute-api.ap-southeast-1.amazonaws.com/graphql',\n  // uri: 'https://pkbxwuq9d9.execute-api.ap-southeast-1.amazonaws.com/graphql',\n  // uri: 'http://192.168.43.82:8000',\n  request: async (operation) => {\n      const token = await AsyncStorage.getItem('token')\n      operation.setContext({\n        headers: {\n          token: token\n        }\n      })\n  },\n})","import React from 'react'\nimport Navigator from './src/navigator'\nimport {ApolloProvider} from '@apollo/react-hooks'\nimport {AuthContext} from './src/context'\nimport {client} from './src/graphql'\nimport {AsyncStorage} from 'react-native'\n\nexport default function App() {\n  const [token, setToken] = React.useState(null)\n\n  const authMemo = React.useMemo(() => {\n    return({\n      setToken: async (token) => {\n        await AsyncStorage.setItem(\"token\", token)\n        setToken(token)\n      },\n      removeToken: async () => {\n        await AsyncStorage.removeItem(\"token\")\n        client.clearStore()\n        setToken(null)\n      }\n    })\n  })\n\n  React.useEffect(() => {\n    const checkToken = async() => {\n      setToken(await AsyncStorage.getItem(\"token\"))\n    }\n    checkToken()\n  })\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider value={authMemo}>\n        <Navigator isSignedIn={token}/>\n      </AuthContext.Provider>\n    </ApolloProvider>\n  )\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/spektrum/expo-service-worker.js', { scope: '/spektrum/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}